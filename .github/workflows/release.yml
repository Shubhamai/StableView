name: Release
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-app:
    defaults:
      run:
        shell: bash -el {0}

    environment: signing

    strategy:
      fail-fast: false
      matrix:
        include:
          #- platform: macos-latest
          #  triplet: x64-osx
          - platform: windows-latest
            triplet: x64-windows-static-md
          #- platform: ubuntu-latest
          #  triplet: x64-linux

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Install Linux System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libdbus-1-3 libdbus-1-dev libxi-dev libxtst-dev libgles2-mesa-dev libgtk-3-dev \
                                  libwebkit2gtk-4.0-dev librsvg2-dev
        if: runner.os == 'Linux'

      - name: Install Windows System Dependencies
        run: choco install -y wget
        if: runner.os == 'Windows'

      - uses: actions/checkout@v3
        with:
          submodules: true
      #- name: Setup node
      #  uses: actions/setup-node@v3
      #  with:
      #    node-version: 16

      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Set VCPKG_ROOT
        run: echo "VCPKG_ROOT=$VCPKG_INSTALLATION_ROOT" >> $GITHUB_ENV

      - name: Cache vcpkg
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.VCPKG_ROOT }}/installed
            ${{ env.VCPKG_ROOT }}/packages
          key: ${{ matrix.platform }}-vcpkg-opencv4[dnn]-${{ matrix.triplet }}


      - name: Build OpenCV 4
        run: "'${{env.VCPKG_ROOT}}/vcpkg' install opencv4[dnn]:${{ matrix.triplet }}"

      - name: Cache Rust / Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-${{runner.arch}}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{runner.arch}}-cargo-
 
      - name: Install WiX
        run : |
          nuget install WiX
          cargo install cargo-wix
          
      - name: Test
        #env:
        #  OPENCV_LINK_LIBS: opencv_world460
        #  OPENCV_INCLUDE_PATHS: C:\tools\opencv\build\include
        #  OPENCV_LINK_PATHS: C:\tools\opencv\build\x64\vc15\lib
        run: cargo test --release
      - name: Build
        #env:
        #  OPENCV_LINK_LIBS: opencv_world460 
        #  OPENCV_INCLUDE_PATHS: C:\tools\opencv\build\include
        #  OPENCV_LINK_PATHS: C:\tools\opencv\build\x64\vc15\lib
        run: cargo build --release
